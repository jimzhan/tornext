#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright Â© 2014 Jim Zhan <jim.zhan@me.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""
Usage: tornext <command> [options] [<args>...]

Options:
    -h, --help          show this help message and exit.

Commands:
    create              create a Tornado project with the given name.

See 'tornext <command> --help' for further information on a specific command.
"""
import re
import os.path
import tornext

from docopt import docopt
from subprocess import call
from tornext import commands


class Manager(object):

    basedir = os.path.dirname(commands.__file__)

    @classmethod
    def find_commands(cls):
        """Find all available management commands.

        Returns: list of commands under `tornext.commands`.
        """
        pattern = re.compile(r'^([a-zA-Z]+)(\w?)(\.py)')
        return [py[:-3] for py in os.listdir(cls.basedir) if pattern.match(py)]


    @classmethod
    def dispatch(cls, command, argv=None):
        """Dynamically dispatch the given command to concrete python script.

        """
        if command in cls.find_commands():
            py = os.path.join(cls.basedir, '%s.py' % command)
            exit(call(['python', py] + argv))
        else:
            exit(call(['python', __file__, '--help']))



if __name__ == '__main__':
    args = docopt(__doc__, version=tornext.__version__, options_first=True)
    argv = [args['<command>']] + args['<args>']
    Manager.dispatch(args['<command>'], argv=argv)
